HTML DOM節點
在HTML DOM（Document Object Model)中，每一個元素都是節點
  文檔是一個文檔節點
  所有HTML元素都是元素節點
  所有HTML屬性都是屬性節點
  本文插入到HTML元素是本文節點
  註釋是註釋節點
  
Document對象
當瀏覽器載入HTML文檔，就會成為Document對象
Document對象是HTML文檔節點
Document對象使我們可以從腳本中對HTML頁面中的所有元素進行訪問

Document對象屬性和方法
document.activeElement:返回當前獲取焦點元素
document.addEventListener():向文檔添加句柄
document.adoptNode(node):從另一個文檔返回adapded節點到當前文檔
document.anchors:返回對文檔中所有Anchor對象的引用
document.baseURl:返回文檔的絕對基礎URl
document.body:返回文檔的body元素
document.close():關閉用document.open()方法打開的輸出流，並顯示選定的數據
document.cookie:設置或返回與當前文檔有關的所有cookie
document.createAttribute():創建一個屬性節點
document.createComment():createComment()方法可創建註釋節點
document.createDocumentFragment():創建空的DocumentFragment對象，
                                  並返回此對象
document.createElement():創建元素節點
document.createTextNode():創建本文節點
document.doctype:返回與文檔相關的文檔類型聲明（DTD)
document.documentElement:返回文檔的根節點
document.documentMode:返回用於通過瀏覽器渲染文檔的模式
document.documentURl:設置或返回文檔位置
document.domain:返回當前文檔的域名
document.embeds:返回文檔中所有嵌入的內容（embed)集合
document.forms:返回文檔中所有Form對象引用
document.getElementsByClassName():返回文檔中所有類型的元素集合，作為NodeList對象
document.getElementById():返回對擁有指定id的第一個對象的引用
document.getElementsByName():返回帶有指定標籤名的對象集合
document.getElementsByTagName():返回帶有指定名稱的對象集合
document.images:返回對文檔中所有Image對象引用
document.implementation:返回處理該文檔的DOMImplementation對象
document.importNode():把一個節點從另一個文檔複製到該文件以便應用
document.inputEncoding:返回用於文檔的編碼方式（在解析時）
document.lasModified:返回文檔被最後修改的時間
document.links:返回對文檔中所有Area和Link對象引用
document.normalize():刪除空文本節點。並連接相林節點
document.normalizeDocument():刪除空文本節點，並連接相鄰節點的
document.open():打開一個流，已收集來自任何document.write()或document.writeln()方法輸出
document.querySelector():返回文檔中匹配指定的CSS選擇器的第一元素
document.querySelectorAll():document.querySelectorAll()是HTML5中
                            引入的新方法，返回文檔中匹配的CSS選擇器的所有元素節點列表
document.readyState:返回文檔狀態
document.removeEventListener():移除文檔中事件句柄（由addEventListener()方法添加）
document.renameNode():重新命名元素或者數行節點
document.scripts:返回頁面中所有腳本的集合
document.stricErrorChecking:設置或返回是否強制進行錯誤檢查
document.title:返回當前文檔的標題
document.URL:返回文檔完整URL
document.write():向文檔寫HTML表達式或javascript
document.writeln():等同於write()方法，不同的是在每個表達式之後寫一個換行符

